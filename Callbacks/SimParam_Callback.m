function SimParam_Callback(hObject,eventdata,handles)

data = guidata(handles.MainFigure);

% Results figure
displaySimParam = figure('Name','Simulation Parameters','MenuBar','none','Unit',...
    'normalized','Position',[.35 .4 .3 .35],'WindowStyle','modal');

% Simulation Parameters options
sp_panel = uipanel('Title','Enter simulation parameters','Unit','normalized','Position',[0 0 1 .65]);
sp_sstBoundary = uicontrol(sp_panel,'Style','popupmenu',...
    'Unit','normalized','String','Boundary for the SS check','Position',[.05 .84 .4 .1],...
    'Tag','sstBoundary','String',data.mesh.boundaryNames,'Value',data.sp.sstBoundary,...
    'Callback',@sp_Callback);
sp_sstol = uicontrol(sp_panel,'Style','edit','Unit',...
    'normalized','String','1e-3','Position',[.05 .64 .4 .1],'Tag','sstol',...
    'String',num2str(data.sp.sstol),'Callback',@sp_Callback);
sp_nOfCyclesMax = uicontrol(sp_panel,'Style','edit',...
    'Unit','normalized','String','30','Position',[.05 .44 .4 .1],'Tag','nOfCyclesMax',...
    'String',num2str(data.sp.nOfCyclesMax),'Callback',@sp_Callback);
sp_stabParam = uicontrol(sp_panel,'Style','edit',...
    'Unit','normalized','String','4','Position',[.05 .24 .4 .1],'Tag','stabParam',...
    'String',num2str(data.sp.stabParam),'Callback',@sp_Callback);
sp_spaceXtimeFrame = uicontrol(sp_panel,'Style','edit','String',...
    '0.04','Unit','normalized','Position',[.05 .04 .4 .1],'Tag','spaceXtimeFrame',...
    'String',num2str(data.sp.spaceXtimeFrame),'Callback',@sp_Callback);
sp_sstBoundaryText = uicontrol(sp_panel,'Style','text','Unit',...
    'normalized','String','value','Position',[.45 .82 .5 .1],...
    'String','Steady State boundary check');
sp_sstolText = uicontrol(sp_panel,'Style','text','Unit',...
    'normalized','String','value','Position',[.45 .61 .5 .1],...
    'String','Steady State Tol');
sp_nOfCyclesMaxText = uicontrol(sp_panel,'Style','text',...
    'Unit','normalized','Position',[.45 .41 .5 .1],...
    'String','n of cycles max');  
sp_stabParamText = uicontrol(sp_panel,'Style','text',...
    'Unit','normalized','Position',[.45 .21 .5 .1],...
    'String','stability parameter');
sp_spaceXtimeFrameText = uicontrol(sp_panel,'Style','text',...
    'Unit','normalized','Position',[.45 .01 .5 .1],...
    'String','space X time frame');

% Display options
res_display = uibuttongroup('Title','Runtime display options','Unit','normalized','Position',[0 .65 1 .35],...
    'SelectionChangeFcn',@sp_Callback);
optStore_0 = uicontrol(res_display,'Style','radiobutton','Unit','normalized',...
    'String','Display nothing','Value',0,'Position',[.05 .8 .8 .2],'Tag','optStore_0');
optStore_1 = uicontrol(res_display,'Style','radiobutton','Unit','normalized',...
    'String','Display reflected potential','Value',0,'Position',[.05 .55 .8 .2],'Tag','optStore_1');
optStore_2 = uicontrol(res_display,'Style','radiobutton','Unit','normalized',...
    'String','Display total potential','Value',0,'Position',[.05 .3 .8 .2],'Tag','optStore_2');
optStore_3 = uicontrol(res_display,'Style','radiobutton','Unit','normalized',...
    'String','Display reference solution','Value',0,'Position',[.05 .05 .8 .2],'Tag','optStore_3');

optStore = data.sp.optStore;
istore = eval(['optStore_',num2str(optStore)]);
set(istore,'Value',1)

    %_________________
    function sp_Callback(hObject,eventdata) 
        
    tag = get(hObject,'Tag');
    
    if any(strcmp(tag,{'nOfCyclesMax' 'stabParam' 'spaceXtimeFrame' 'sstol'}))
        value = str2double(get(hObject,'String'));
        if isnan(value) || value <= 0
            itag = eval(['sp_' tag]);
            set(itag,'String',num2str(data.sp.(tag)))
            msje = {'??? The parameter has to be a positive number'};
            setOutput(msje,handles.run_wipOutput), error('Error in Berkhoff GUI')
        elseif value ~= data.sp.(tag)
            data.sp.(tag) = value;
        end
    elseif strcmp(tag,'sstBoundary')
        value = get(hObject,'Value');
        data.sp.(tag) = value;
    else
        tag = get(eventdata.NewValue,'Tag');
        optionValue = tag(10);
        data.sp.optStore = str2double(optionValue);
    end
    
    guidata(handles.MainFigure,data);
    
    end
    %_________________

end
